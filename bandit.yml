# Bandit configuration file for security scanning

# Test which checks to run
tests:
  # Include all tests by default
  - B101  # assert_used
  - B102  # exec_used
  - B103  # set_bad_file_permissions
  - B104  # hardcoded_bind_all_interfaces
  - B105  # hardcoded_password_string
  - B106  # hardcoded_password_funcarg
  - B107  # hardcoded_password_default
  - B108  # hardcoded_tmp_directory
  - B110  # try_except_pass
  - B112  # try_except_continue
  - B201  # flask_debug_true
  - B301  # pickle
  - B302  # marshal
  - B303  # insecure_md5
  - B304  # insecure_md4
  - B305  # insecure_sha1
  - B306  # mktemp_q
  - B307  # eval
  - B308  # mark_safe
  - B309  # httpsconnection
  - B310  # urllib_urlopen
  - B311  # random
  - B312  # telnetlib
  - B313  # xml_bad_cElementTree
  - B314  # xml_bad_ElementTree
  - B315  # xml_bad_expatreader
  - B316  # xml_bad_expatbuilder
  - B317  # xml_bad_sax
  - B318  # xml_bad_minidom
  - B319  # xml_bad_pulldom
  - B320  # xml_bad_etree
  - B321  # ftplib
  - B322  # input
  - B323  # unverified_context
  - B324  # hashlib_new_insecure_functions
  - B325  # tempnam
  - B401  # import_telnetlib
  - B402  # import_ftplib
  - B403  # import_pickle
  - B404  # import_subprocess
  - B405  # import_xml_etree
  - B406  # import_xml_sax
  - B407  # import_xml_expat
  - B408  # import_xml_minidom
  - B409  # import_xml_pulldom
  - B410  # import_lxml
  - B411  # import_xmlrpclib
  - B412  # import_httpoxy
  - B413  # import_pycrypto
  - B501  # request_with_no_cert_validation
  - B502  # ssl_with_bad_version
  - B503  # ssl_with_bad_defaults
  - B504  # ssl_with_no_version
  - B505  # weak_cryptographic_key
  - B506  # yaml_load
  - B507  # ssh_no_host_key_verification
  - B601  # paramiko_calls
  - B602  # subprocess_popen_with_shell_equals_true
  - B603  # subprocess_without_shell_equals_true
  - B604  # any_other_function_with_shell_equals_true
  - B605  # start_process_with_a_shell
  - B606  # start_process_with_no_shell
  - B607  # start_process_with_partial_path
  - B608  # hardcoded_sql_expressions
  - B609  # linux_commands_wildcard_injection
  - B610  # django_extra_used
  - B611  # django_rawsql_used
  - B701  # jinja2_autoescape_false
  - B702  # use_of_mako_templates
  - B703  # django_mark_safe

# Test which checks to skip
skips:
  # Skip assert statements in tests (common in testing frameworks)
  - B101
  # Skip random module usage (acceptable for ML applications)
  - B311

# Exclude certain paths from scanning
exclude_dirs:
  - /tests/
  - /docs/
  - /.git/
  - /.pytest_cache/
  - /.mypy_cache/
  - /.ruff_cache/
  - /build/
  - /dist/
  - /.venv/
  - /venv/
  - /__pycache__/

# Severity levels
# LOW, MEDIUM, HIGH
severity: MEDIUM

# Confidence levels  
# LOW, MEDIUM, HIGH
confidence: MEDIUM

# Output format
# Options: csv, custom, html, json, screen, txt, xml, yaml
format: json

# Output file (optional)
# output: bandit-report.json

# Message template for output
msg_template: "{abspath}:{line}: [{test_id}({severity}), {confidence}] {msg}"

# Plugins to load
plugins:
  - B201  # Flask debug
  - B501  # SSL/TLS issues

# Custom rules for the project
rules:
  # Allow pickle for model serialization (common in ML)
  pickle_allowed:
    - "surrogate_optim/models/serialization.py"
  
  # Allow subprocess for system integration
  subprocess_allowed:
    - "surrogate_optim/utils/system.py"

# Test-specific configurations
assert_used:
  skips: ["*/tests/*", "*test*.py"]

hardcoded_password_string:
  # Pattern for detecting hardcoded passwords
  word_list: ["password", "pass", "passwd", "pwd", "secret", "token", "key"]

hardcoded_tmp_directory:
  # Allow certain temp directories for testing
  tmp_dirs: ["/tmp", "/var/tmp", "/dev/shm"]

# Custom patterns for the project
custom_checks:
  # Check for JAX security considerations
  jax_security:
    pattern: "jax.jit.*unsafe"
    message: "Potentially unsafe JAX JIT usage detected"
    severity: "MEDIUM"
  
  # Check for unsafe model loading
  unsafe_model_loading:
    pattern: "(pickle|joblib)\.load.*"
    message: "Potentially unsafe model loading detected"
    severity: "HIGH"
  
  # Check for hardcoded ML hyperparameters that might be security-sensitive
  hardcoded_hyperparams:
    pattern: "(random_state|seed)\s*=\s*\d+"
    message: "Hardcoded random seed detected - consider using configurable values"
    severity: "LOW"

# Baseline configuration
# This allows tracking of existing issues without failing builds
baseline:
  # Path to baseline file (optional)
  # baseline_file: ".bandit_baseline"
  
  # Whether to fail if new issues are found
  fail_on_new_issues: true
  
  # Whether to include baseline issues in output
  include_baseline_issues: false